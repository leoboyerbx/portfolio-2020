@import '../globals/colors';
@import '../globals/globals';

$header-text-color: white;
@mixin stroke ($offset) {
  stroke-dasharray: $offset;
  stroke-dashoffset: $offset;
}
@mixin delay ($numletters, $delay) {
  &::before {
    animation: appear .3s both $numletters * $delay + 1.5s;
  }
  .svg-text{
    position: relative;
    animation: fill .4s both;
    animation-delay: $numletters * $delay + 1.2s;
    @for $i from 1 through $numletters {
      path:nth-child(#{$i}) {
        animation-delay:.5 + $i * $delay;
      }
    }
  }
}

#ext-page {
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  z-index: -1;
  transition-delay: .9s;
  color: #fff;

  overflow: hidden;

  .cache { // Round cache animation
    content: '';
    top: 0;
    left: 0;
    transform: translate(-50%, -50%) scale3d(0, 0, 0);
    position: absolute;
    border-radius: 100%;
    min-width: 300vh;
    width: 300vw;
    min-height: 300vw;
    height: 300vh;
    background-color: $theme-grey-dark;
    transition:  transform .9s ease-in;
    z-index: -1;
  }
  &.open {
    z-index: 100;
    transition-delay: 0s;
  }
  &.open .cache {
    transition-timing-function: $transition-easing;
    transform: translate(-50%, -50%) scale3d(1, 1, 1);
  }
  #ext-content {
    overflow-y: scroll;
    z-index: 1000;
    color: #fff;
    transition: all .3s .3s;
    opacity: 1;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;

    &.hidden{
      transition: all .3s;
      opacity: 0;
    }
    .header {
      text-align: center;
      background-color: $theme-grey-dark;
      position: fixed;
      height: 80px;
      width: 100%;
      left: 0;
      top: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      z-index: 100;
      &::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 1px;
        bottom: 0;
        left: 0;
        background-color: #fff;
        transform-origin: left center;
        transform: scale(0, 1);
      }
      @include md() {
        //position: absolute;
        //background-color: #ff0000;
        pointer-events: none;
        background-color: transparent;
        position: fixed;
        width: 20%;
        height: 100%;
        left: 39%;
        padding: 0;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;

        .svg-text-wrapper {
          position: relative;
          display: flex;
          align-items: center;
          justify-content: center;
          width: 16vw;
          height: 16vw;
          //border: solid white 1px;

          &::before {
            position: absolute;
            content: '';
            height: 5px;
            left: 0;
            right: 100%;
            top: 50%;
            transform: translateY(-50%);
            background-color: #fff;
            transition: all .3s;
          }
          &.del::before {
            right: 0;
          }
        }
        &::before {
          content: none;
        }
      }

      .svg-text {
        overflow: visible;
        height: 30px;
        max-width: 60vw;
        @include md () {
          max-width: 100%;
        }
        fill: transparent;
        stroke: $header-text-color;
        stroke-width: 5px;

        .letter-amaj {@include stroke(921)}
        .letter-b {@include stroke(880)}
        .letter-d {@include stroke(880)}
        .letter-e {@include stroke(804)}
        .letter-i {@include stroke(497)}
        .letter-l {@include stroke(445)}
        .letter-o {@include stroke(703)}
        .letter-pmaj {@include stroke(893)}
        .letter-r {@include stroke(477)}
        .letter-s {@include stroke(686)}
        .letter-u {@include stroke(743)}
        .letter-v {@include stroke(634)}
        .letter-wmaj {@include stroke(1415)}

        .letters-fi {@include stroke(1123)}

      }

      .header-close {
        pointer-events: all;
        display: block;
        position: absolute;
        right: 20px;
        top: 50%;
        width: 20px;
        height: 20px;
        transition: all .3s;
        transform: translateY(-50%);
        @include md() {
          position: relative;
          right: unset;
          top: unset;
          transform: scale(1.5);
          &:hover {
            opacity: 0;
          }
        }
        .cross {
          position: absolute;
          pointer-events: all;
        }
      }
    }

    .content-wrapper {
      min-height: 100%;
      @include md () {
        margin: 0;
      }
    }
  }
}
#ext-page:not(.hidden) {
  .svg-text {
    path {
      animation: path 1.4s both;
    }
  }
  .header.web {
    @include delay(3, .4s);
  }
  .header.profil {
    @include delay(6, .2s);
  }
  .header.audiovisuel {
    @include delay(11, .1s);
  }
}
@keyframes path {
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes fill {
  to {
    fill: $header-text-color;
  }
}
@keyframes appear {
  to {
    transform: scale(1,1);
  }
}

#cursor-follower {
  .cross-cursor {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1.2);
    position: absolute;
    width: 20px;
    height: 20px;
    .x-bar {
      position: absolute;
      height: 3px;
      width: 100%;
      border-radius: 10px;
      transform: translateY(10px) rotate(-45deg);
      overflow: hidden;
      &::before {
        content: '';
        position: absolute;
        width: 0;
        transition: all .2s;
        height: 100%;
        border-radius: 10px;
        top: 0;
        left: 0;
        background-color: $theme-grey-dark;
      }
      &:last-child::before {
        transition-delay: 0s;
      }
      &:last-child {
        transform: translateY(10px) rotate(45deg);
      }
    }
  }
}
#cursor-follower.closing {
  .round-cursor {
    background-color: $theme-main;
    transform: scale(1.5);
  }
  .cross-cursor {
    .x-bar::before {
      width: 100%;
    }
    .x-bar:first-child::before {
      transition-delay: .2s;
    }
  }
}
