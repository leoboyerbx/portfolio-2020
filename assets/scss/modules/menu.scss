@import "../globals/globals";

$bars-left-hover: 40% 60% 25%;
$bars-left: 75% 10% 50%;
$bars-widths: 15% 15% 15%;
$bar-color: #101010;

#menu-button {
  display: block;
  cursor: pointer;
  //cursor: none;
  z-index: 210;
  #menu-button-hint {
    transition: all .3s $transition-easing;
  }

  #menu-button-icon {
    z-index: 200;
    position: fixed;
    width: 40px;
    height: 40px;
    left: 20px;
    top: 20px;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    //cursor: pointer;
    transform: scale(.7);

    &::before {
      content: '';
      background-color: #fff;
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      transform: scale(2);
      transition: all .2s .5s;
    }

    .h-bar {
      position: relative;
      height: 4px;
      width: 100%;
    }

    .h-bar::after, .h-bar::before {
      content: '';
      position: absolute;
      background-color: $bar-color;
      border-radius: 10px;
      height: 100%;
      transition: all .3s $transition-easing;
    }

    .h-bar:first-child::before {
      transform-origin: left center;
    }

    @for $i from 1 through 3 {
      .h-bar:nth-child(#{$i}) {
        &::before {
          $val: 100% - nth($bars-left, $i);
          left: 0;
          right: $val;
        }

        &::after {
          $val: nth($bars-left, $i) + nth($bars-widths, $i);
          left: $val;
          right: 0;
        }
      }
    }

    .x-bar {
      position: absolute;
      height: 4px;
      width: 100%;
      border-radius: 5px;
      overflow: hidden;

      &::before, &:nth-child(4)::after {
        position: absolute;
        content: '';
        width: 0;
        height: 100%;
        border-radius: 5px;
        left: 0;
        top: 0;
        background-color: $bar-color;
        transition: all .3s $transition-easing;
      }

      &:nth-child(4)::after {
        right: 0;
        left: auto;
      }

      &:nth-child(4) {
        transform: rotate(45deg) scaleX(1.1);
      }

      &:last-child {
        transform: rotate(-45deg) scaleX(1.1);
      }
    }
  }

  &:hover #menu-button-icon {
    @for $i from 1 through 3 {
      .h-bar:nth-child(#{$i}) {
        &::before {
          $val: 100% - nth($bars-left-hover, $i);
          left: 0;
          right: $val;
        }

        &::after {
          $val: nth($bars-left-hover, $i) + nth($bars-widths, $i);
          left: $val;
          right: 0;
        }
      }
    }

    .h-bar:nth-child(2) {
      &::before, &::after {
        animation-direction: reverse;
      }
    }
  }
  &.menu-open {
    #menu-button-icon::before {
      transition-delay: 0s;
      background-color: $theme-grey-light;
    }
    #menu-button-hint {
      .text-menu span {
        transform: translate3d(0, -80%, 0);
      }

      .text-close span {
        transform: translate3d(0, 0, 0);
      }
    }
  }
  &.menu-open #menu-button-icon, &.menu-open:hover #menu-button-icon {
    @for $i from 1 through 3 {
      $delay: ($i - 1) * .1s;
      .h-bar:nth-child(#{$i}) {
        &::after {
          left: 100%;
          transition-delay: $delay;
        }

        &::before {
          right: 0;
          left: 100%;
          $delay-1: $delay + .2s;
          $delay-2: $delay + .3s;
          transition: right .3s $transition-easing $delay-1, left $delay-1 $transition-easing $delay-2;
        }
      }
      .x-bar::before {
        width: 100%;
      }
      .x-bar:nth-child(4) {
        &::before, &::after {
          width: 35%;
          transition-delay: .8s;
        }
      }
      .x-bar:last-child::before {
        transition-delay: .7s;
      }
    }
  }
  &.scrolled {
    #menu-button-hint {
      transform: translate3d(0, -100px, 0);
    }
  }

  &.closed #menu-button-icon {
    @for $i from 0 through 2 {
      .h-bar:nth-child(#{$i+1}) {
        &::before {
          transition-delay: ($i * .1s) + .3s;
        }

        &::after {
          transition-delay: ($i * .1s) + .5s;

        }
      }
    }
  }
  #menu-button-hint {
    z-index: 200;
    position: absolute;
    top: 25px;
    left: 75px;
    line-height: 30px;
    color: $bar-color;
    font-size: 120%;
    font-family: 'Raleway', sans-serif;
    font-weight: 500;

    span {
      margin: 0;
      padding: 0;
      display: inline-block;
      transition: all .4s $transition-easing;
    }

    @for $i from 0 through 5 {
      span:nth-child(#{$i+1}) {
        transition-delay: $i * .02s;
      }
    }

    .text-menu, .text-close {
      position: absolute;
      overflow: hidden;
      padding: 0;
      width: 100px;
    }

    .text-close span {
      transform: translate3d(0, 80%, 0);
    }
  }
}
#menu {
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  left: 0;
  z-index: 190;
  pointer-events: none;
  //background-color: rgba(255, 255, 255, .95);
  opacity: 1;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: $theme-grey-light;
    opacity: 1;
    transform-origin: right center;
    transform: scale(0, 1);
    transition: transform .7s $transition-easing .7s;
  }

  &.open {
    pointer-events: all;
    &::before {
      transform-origin: left center;
      transition-delay: 0s;
      transform: scale(1, 1);
    }
  }
  #menu-links {
    position: absolute;
    top: 10%;
    bottom: 10%;
    left: 0;
    list-style-type: none;
    font-family: 'Arboria', sans-serif;
    font-weight: 700;
    font-size: 3em;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-left: 8%;
    .link-wrapper {
      overflow: hidden;
      //position: relative;
      @for $i from 0 through 5 {
        &:nth-child(#{$i + 1}) a {
          transition-delay: $i * .1s;
        }
      }
      a {
        display: inline-block;
        color: transparent;
        position: relative;
        width: auto;
        cursor: pointer;
        padding-bottom: 10px;

        transition: all .8s $transition-easing;
        transform: translateY(80%);

        &::before, &::after {
          content: attr(data-text);
          position: absolute;
          bottom: 0;
          height: 100%;
          color: $theme-grey-dark;
          overflow: hidden;
          transition: all .5s $transition-easing;
        }
        &::before {
          right: 0;
          width: 100%;
        }
        &::after {
          color: $theme-main;
          width: 0;
          left: 0;
        }
        &:hover {
          &::before {
            opacity: 0;
          }
          &::after {
            width: 100%;
          }
        }
      }
    }
  }
  &.open #menu-links .link-wrapper a {
      transform: translateY(0);
  }

  #menu-separator {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 1px;
    height: 80%;
    transform: translate(-50%, -50%);
    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background-color: $theme-grey-dark;
      transform: scale(1, 0);
      transform-origin: center bottom;
      transition: transform .6s $transition-easing;
    }
  }
  &.open #menu-separator::before {
    transform: scale(1, 1);
    transition-delay: .3s;
    transform-origin: center top;
  }
  #menu-contact {
    position: absolute;
    top: 20%;
    right: 0;
    //width: 50%;
    height: 80%;
    padding: 50px ;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    overflow: hidden;
    .cv {
      text-align: right;
      margin-bottom: 20px;
    }
    .coords {
      margin-top: 20px;
      text-align: right;
      color: $theme-grey-dark;
      h1 {
        font-size: 120%;
        font-weight: 600;
        text-transform: uppercase;
      }
      p {
        margin: 5px 0;
      }
    }

    div {
      transform: translateX(150%);
      transition: all .6s $transition-easing;
      @for $i from 0 through 5 {
        &:nth-child(#{$i+1}) {
          transition-delay: ($i * .1s) + .5s;
        }
      }
    }
  }
  &.open #menu-contact {
    div {
      transform: translateX(0);
    }
  }
}


#cursor-follower.menu {
  .round-cursor {
    border-width: 2px;
  }
}
