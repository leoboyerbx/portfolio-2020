image: creatiwww/docker-compose:latest

services:
  - docker:dind

variables:
  STAGE_SERVER_IP: lbxs.dev
#  PROD_SERVER_IP: 10.10.10.2
  STAGE_SERVER_USER: pi
#  PROD_SERVER_USER: gitlab
  STAGE_IMAGE_APP_TAG: registry.gitlab.com/leoboyerbx/portfolio/portfolio:stage
#  PROD_IMAGE_APP_TAG: registry.my_organiation.org/development/amazing_app/app:prod

stages:
  - build
  - staging
#  - release
#  - deploy

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_IMAGE
    - echo "IMAGE_APP_TAG=$STAGE_IMAGE_APP_TAG" >> .env
    - echo "USER_CONTENT_PATH=$STAGE_USER_CONTENT_PATH" >> .env
    - docker-compose -f docker-compose.yml -f docker-compose.prod.yml build
    - docker-compose push
  only:
    - staging
    - master

deploy-to-stage:
  stage: staging
  script:
    - eval $(ssh-agent -s)
    - echo "$STAGE_SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_IMAGE
    - echo "IMAGE_APP_TAG=$STAGE_IMAGE_APP_TAG" >> .env
    # Env variables for service to run
    - echo "USER_CONTENT_PATH=$STAGE_USER_CONTENT_PATH" >> .env
    - echo "USER_CONTENT_PATH=$STAGE_USER_CONTENT_PATH" >> .env
    - echo "MYSQL_HOST=$STAGE_MYSQL_HOST" >> .env
    - echo "MYSQL_DATABASE=$STAGE_MYSQL_DATABASE" >> .env
    - echo "MYSQL_PORT=$STAGE_MYSQL_PORT" >> .env
    - echo "MYSQL_USER=$STAGE_MYSQL_USER" >> .env
    - echo "MYSQL_PASSWORD=$STAGE_MYSQL_PASSWORD" >> .env
    - echo "GA_ID=$STAGE_GA_ID" >> .env
    # Remote ops
    - docker-compose -H "ssh://$STAGE_SERVER_USER@$STAGE_SERVER_IP" down --remove-orphans
    - docker-compose -H "ssh://$STAGE_SERVER_USER@$STAGE_SERVER_IP" pull
    - docker-compose -H "ssh://$STAGE_SERVER_USER@$STAGE_SERVER_IP" up -d
  only:
    - staging
    - master

#release:
#  stage: release
#  script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_IMAGE
#    - echo "IMAGE_APP_TAG=$PROD_IMAGE_APP_TAG" >> .env
#    - docker-compose build
#    - docker-compose push
#  only:
#    - master
#
#deploy-to-prod:
#  stage: deploy
#  script:
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PROD_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY_IMAGE
#    - echo "EXTERNAL_SERVICE_KEY=$EXTERNAL_SERVICE_PROD_KEY" >> .env
#    - echo "IMAGE_APP_TAG=$PROD_IMAGE_APP_TAG" >> .env
#    - docker-compose -H "ssh://$PROD_SERVER_USER@$PROD_SERVER_IP" down --remove-orphans
#    - docker-compose -H "ssh://$PROD_SERVER_USER@$PROD_SERVER_IP" pull
#    - docker-compose -H "ssh://$PROD_SERVER_USER@$PROD_SERVER_IP" up -d
#  only:
#    - master
#  when: manual
